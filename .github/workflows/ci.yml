name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  check-cs:
    name: Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: PHP-CS-Fixer
        uses: docker://ghcr.io/php-cs-fixer/php-cs-fixer:3-php8.3
        with:
          args: --config=.php-cs-fixer.php check --diff

  phpstan:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: PHPStan
        uses: docker://oskarstark/phpstan-ga
        env:
          REQUIRE_DEV: true

  phpunit:
    name: "PHPUnit on ${{ matrix.php }} / Castor from ${{ matrix.castor.method }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - php: "8.1"
            castor:
              bin: 'bin/castor'
              method: 'bin/castor'
          - php: "8.1"
            castor:
              bin: 'tools/phar/build/castor.linux-amd64.phar'
              method: 'phar'
          - php: "8.1"
            castor:
              bin: 'castor'
              method: 'binary'
          - php: "8.2"
            castor:
              bin: 'bin/castor'
              method: 'bin/castor'
          - php: "8.3"
            castor:
              bin: 'bin/castor'
              method: 'bin/castor'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php }}"

      - name: Install dependencies (project)
        run: composer install --prefer-dist --no-progress --optimize-autoloader --classmap-authoritative

      # Needed because we repack an application in some tests
      - name: Install dependencies (phar builder)
        run: composer install --prefer-dist --no-progress --optimize-autoloader --classmap-authoritative
        working-directory: tools/phar

      - name: Get cache keys
        run: |
          set -e

          # Should be the same command as the one in this file, below
          cache_dirname_main=$(tests/bin/compile-get-cache-key phar-location-is-not-used-in-cache-key --php-extensions=mbstring,phar,posix,tokenizer,pcntl)
          cache_key_main=$(basename $cache_dirname_main)
          echo cache_dirname_main=$cache_dirname_main >> $GITHUB_ENV
          echo cache_key_main=$cache_key_main >> $GITHUB_ENV

          # And should be the same command as the one in CompileCommandTest
          cache_dirname_test=$(tests/bin/compile-get-cache-key phar-location-is-not-used-in-cache-key --os linux --php-extensions mbstring,phar,posix,tokenizer)
          cache_key_test=$(basename $cache_dirname_test)
          echo cache_dirname_test=$cache_dirname_test >> $GITHUB_ENV
          echo cache_key_test=$cache_key_test >> $GITHUB_ENV

      - name: Restore PHP static building artifacts cache for main job
        uses: actions/cache@v4
        with:
          path: ${{ env.cache_dirname_main }}
          key: php-static-${{ env.cache_key_main }}
        if: matrix.castor.method == 'binary'

      - name: Restore PHP static building artifacts cache for test job
        uses: actions/cache@v4
        with:
          path: ${{ env.cache_dirname_test }}
          key: php-static-${{ env.cache_key_test }}

      - name: Build Castor phar for Linux
        run: bin/castor castor:phar:linux
        shell: bash
        if: matrix.castor.method == 'phar' || matrix.castor.method == 'binary'

      - name: Compile Custom Built PHP along Castor phar for Linux
        run: bin/castor compile tools/phar/build/castor.linux-amd64.phar --php-extensions=mbstring,phar,posix,tokenizer,pcntl
        shell: bash
        if: matrix.castor.method == 'binary'

      - name: Link box
        run: sudo ln -s $GITHUB_WORKSPACE/tools/phar/vendor/bin/box /usr/local/bin/box

      - name: Install PHPUnit
        run: vendor/bin/simple-phpunit install

      - name: Run tests
        run: vendor/bin/simple-phpunit
        env:
          CASTOR_BIN: ${{ github.workspace }}/${{ matrix.castor.bin }}

  phar:
    name: Ensure phar is OK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build all the phars
        uses: ./.github/actions/phar
